package eu.telecom_bretagne.cabinet_recrutement.data.model;
// Generated Feb 7, 2023, 5:41:07 PM by Hibernate Tools 5.4.20.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Candidature generated by hbm2java
 */
@Entity
@Table(name="candidature"
    ,schema="public"
)
public class Candidature  implements java.io.Serializable {
    private static final long serialVersionUID = 1L;

    private int id;
    private Niveauqualification niveauqualification;
    private String nom;
    private String prenom;
    private Date datenaissance;
    private String adressepostale;
    private String adresseemail;
    private String cv;
    private Date datedepot;
    private Set<Messagecandidature> messagecandidatures = new HashSet<Messagecandidature>(0);
    private Set<Messageoffredemploi> messageoffredemplois = new HashSet<Messageoffredemploi>(0);
    private Set<Secteuractivite> secteuractivites = new HashSet<Secteuractivite>(0);

    public Candidature() {
    }

	
    public Candidature(int id, Niveauqualification niveauqualification, String nom, String prenom, Date datenaissance, String adressepostale, String adresseemail, String cv, Date datedepot, Set<Secteuractivite> secteuractivites) {
        this.id = id;
        this.niveauqualification = niveauqualification;
        this.nom = nom;
        this.prenom = prenom;
        this.datenaissance = datenaissance;
        this.adressepostale = adressepostale;
        this.adresseemail = adresseemail;
        this.cv = cv;
        this.datedepot = datedepot;
        this.secteuractivites = secteuractivites;
    }
    public Candidature(int id, Niveauqualification niveauqualification, String nom, String prenom, Date datenaissance, String adressepostale, String adresseemail, String cv, Date datedepot, Set<Messagecandidature> messagecandidatures, Set<Messageoffredemploi> messageoffredemplois, Set<Secteuractivite> secteuractivites) {
       this.id = id;
       this.niveauqualification = niveauqualification;
       this.nom = nom;
       this.prenom = prenom;
       this.datenaissance = datenaissance;
       this.adressepostale = adressepostale;
       this.adresseemail = adresseemail;
       this.cv = cv;
       this.datedepot = datedepot;
       this.messagecandidatures = messagecandidatures;
       this.messageoffredemplois = messageoffredemplois;
       this.secteuractivites = secteuractivites;
    }
   

    @Id
    @SequenceGenerator(name="CANDIDATURE_ID_GENERATOR", sequenceName="candidature_id_seq", allocationSize=1)
    @GeneratedValue(strategy=GenerationType.SEQUENCE, generator="CANDIDATURE_ID_GENERATOR")
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_niveauqualification", nullable=false)
    public Niveauqualification getNiveauqualification() {
        return this.niveauqualification;
    }
    
    public void setNiveauqualification(Niveauqualification niveauqualification) {
        this.niveauqualification = niveauqualification;
    }

    
    @Column(name="nom", nullable=false, length=50)
    public String getNom() {
        return this.nom;
    }
    
    public void setNom(String nom) {
        this.nom = nom;
    }

    
    @Column(name="prenom", nullable=false, length=50)
    public String getPrenom() {
        return this.prenom;
    }
    
    public void setPrenom(String prenom) {
        this.prenom = prenom;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="datenaissance", nullable=false, length=13)
    public Date getDatenaissance() {
        return this.datenaissance;
    }
    
    public void setDatenaissance(Date datenaissance) {
        this.datenaissance = datenaissance;
    }

    
    
    @Column(name="adressepostale", nullable=false, length=50)
    public String getAdressepostale() {
        return this.adressepostale;
    }
    
    public void setAdressepostale(String adressepostale) {
        this.adressepostale = adressepostale;
    }

    
    @Column(name="adresseemail", nullable=false, length=50)
    public String getAdresseemail() {
        return this.adresseemail;
    }
    
    public void setAdresseemail(String adresseemail) {
        this.adresseemail = adresseemail;
    }

    
    @Column(name="cv", nullable=false)
    public String getCv() {
        return this.cv;
    }
    
    public void setCv(String cv) {
        this.cv = cv;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="datedepot", nullable=false, length=13)
    public Date getDatedepot() {
        return this.datedepot;
    }
    
    public void setDatedepot(Date datedepot) {
        this.datedepot = datedepot;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="candidature")
    public Set<Messagecandidature> getMessagecandidatures() {
        return this.messagecandidatures;
    }
    
    public void setMessagecandidatures(Set<Messagecandidature> messagecandidatures) {
        this.messagecandidatures = messagecandidatures;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="candidature")
    public Set<Messageoffredemploi> getMessageoffredemplois() {
        return this.messageoffredemplois;
    }
    
    public void setMessageoffredemplois(Set<Messageoffredemploi> messageoffredemplois) {
        this.messageoffredemplois = messageoffredemplois;
    }

@ManyToMany(fetch=FetchType.EAGER)
    @JoinTable(name="secteurcandidature", schema="public", joinColumns = { 
        @JoinColumn(name="id_candidature", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="id_secteuractivite", nullable=false, updatable=false) })
    public Set<Secteuractivite> getSecteuractivites() {
        return this.secteuractivites;
    }
    
    public void setSecteuractivites(Set<Secteuractivite> secteuractivites) {
        this.secteuractivites = secteuractivites;
    }




}


